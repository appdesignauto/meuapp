/**
 * Script para testar a integra√ß√£o completa do Meta Pixel e Google Tag Manager
 * Execute este script no console do navegador para verificar se ambos est√£o funcionando
 */

console.log('=== TESTE DE INTEGRA√á√ÉO - META PIXEL E GOOGLE TAG MANAGER ===');

// Fun√ß√£o para aguardar scripts carregarem
function waitForScripts() {
    return new Promise((resolve) => {
        let attempts = 0;
        const maxAttempts = 50;
        
        const checkScripts = () => {
            attempts++;
            
            const metaPixelLoaded = !!window.DesignAutoPixel;
            const gtmLoaded = !!window.DesignAutoGTM;
            const fbqLoaded = typeof window.fbq !== 'undefined';
            const dataLayerExists = Array.isArray(window.dataLayer);
            
            console.log(`Tentativa ${attempts}:`, {
                metaPixelLoaded,
                gtmLoaded,
                fbqLoaded,
                dataLayerExists
            });
            
            if ((metaPixelLoaded && gtmLoaded) || attempts >= maxAttempts) {
                resolve({
                    metaPixelLoaded,
                    gtmLoaded,
                    fbqLoaded,
                    dataLayerExists
                });
            } else {
                setTimeout(checkScripts, 200);
            }
        };
        
        checkScripts();
    });
}

// Testar Meta Pixel
function testMetaPixel() {
    console.log('\n--- TESTE META PIXEL ---');
    
    if (!window.DesignAutoPixel) {
        console.error('‚ùå Meta Pixel n√£o carregado');
        return false;
    }
    
    const config = window.DesignAutoPixel.getConfig();
    console.log('Configura√ß√£o Meta Pixel:', config);
    
    const isActive = window.DesignAutoPixel.isActive();
    console.log('Meta Pixel ativo:', isActive);
    
    if (isActive) {
        // Testar eventos
        console.log('Testando eventos Meta Pixel...');
        
        window.DesignAutoPixel.trackCustomEvent('TestEvent', {
            test: true,
            timestamp: new Date().toISOString()
        });
        
        window.DesignAutoPixel.trackArtView({
            id: 'test-art-123',
            title: 'Arte de Teste',
            category: 'Vendas',
            value: 5
        });
        
        console.log('‚úÖ Eventos Meta Pixel enviados');
        return true;
    } else {
        console.warn('‚ö†Ô∏è Meta Pixel n√£o est√° ativo');
        return false;
    }
}

// Testar Google Tag Manager
function testGoogleTagManager() {
    console.log('\n--- TESTE GOOGLE TAG MANAGER ---');
    
    if (!window.DesignAutoGTM) {
        console.error('‚ùå Google Tag Manager n√£o carregado');
        return false;
    }
    
    const config = window.DesignAutoGTM.getConfig();
    console.log('Configura√ß√£o GTM:', config);
    
    const isActive = window.DesignAutoGTM.isActive();
    console.log('GTM ativo:', isActive);
    
    if (isActive) {
        // Testar eventos
        console.log('Testando eventos GTM...');
        
        window.DesignAutoGTM.trackEvent('test_event', {
            test: true,
            source: 'integration_test'
        });
        
        window.DesignAutoGTM.trackArtView({
            id: 'test-art-456',
            title: 'Arte GTM Teste',
            category: 'Lavagem',
            value: 3
        });
        
        // Verificar dataLayer
        if (window.dataLayer) {
            console.log('DataLayer atual:', window.dataLayer.slice(-5)); // √öltimos 5 eventos
        }
        
        console.log('‚úÖ Eventos GTM enviados');
        return true;
    } else {
        console.warn('‚ö†Ô∏è GTM n√£o est√° ativo');
        return false;
    }
}

// Testar integra√ß√£o com componentes React
function testReactIntegration() {
    console.log('\n--- TESTE INTEGRA√á√ÉO REACT ---');
    
    // Simular uso dos hooks
    try {
        // Verificar se os hooks est√£o dispon√≠veis no contexto global
        const metaPixelActive = window.DesignAutoPixel?.isActive();
        const gtmActive = window.DesignAutoGTM?.isActive();
        
        console.log('Hooks dispon√≠veis:', {
            metaPixel: !!window.DesignAutoPixel,
            gtm: !!window.DesignAutoGTM
        });
        
        if (metaPixelActive || gtmActive) {
            console.log('‚úÖ Integra√ß√£o React funcional');
            return true;
        } else {
            console.warn('‚ö†Ô∏è Nenhum servi√ßo de tracking ativo');
            return false;
        }
    } catch (error) {
        console.error('‚ùå Erro na integra√ß√£o React:', error);
        return false;
    }
}

// Executar todos os testes
async function runIntegrationTest() {
    console.log('Aguardando scripts carregarem...');
    
    const scriptStatus = await waitForScripts();
    
    console.log('\n=== STATUS DOS SCRIPTS ===');
    console.log('Meta Pixel Script:', scriptStatus.metaPixelLoaded ? '‚úÖ' : '‚ùå');
    console.log('GTM Script:', scriptStatus.gtmLoaded ? '‚úÖ' : '‚ùå');
    console.log('Facebook Pixel (fbq):', scriptStatus.fbqLoaded ? '‚úÖ' : '‚ùå');
    console.log('DataLayer:', scriptStatus.dataLayerExists ? '‚úÖ' : '‚ùå');
    
    // Executar testes
    const metaPixelTest = testMetaPixel();
    const gtmTest = testGoogleTagManager();
    const reactTest = testReactIntegration();
    
    console.log('\n=== RESULTADO FINAL ===');
    console.log('Meta Pixel:', metaPixelTest ? '‚úÖ FUNCIONANDO' : '‚ùå PROBLEMA');
    console.log('Google Tag Manager:', gtmTest ? '‚úÖ FUNCIONANDO' : '‚ùå PROBLEMA');
    console.log('Integra√ß√£o React:', reactTest ? '‚úÖ FUNCIONANDO' : '‚ùå PROBLEMA');
    
    const overallSuccess = metaPixelTest || gtmTest;
    console.log('\nStatus Geral:', overallSuccess ? '‚úÖ INTEGRA√á√ÉO FUNCIONAL' : '‚ùå PROBLEMAS ENCONTRADOS');
    
    return {
        metaPixel: metaPixelTest,
        gtm: gtmTest,
        react: reactTest,
        overall: overallSuccess
    };
}

// Executar teste automaticamente
runIntegrationTest().then(results => {
    console.log('\n=== TESTE CONCLU√çDO ===');
    console.log('Resultados:', results);
    
    if (results.overall) {
        console.log('üéâ SUCESSO: Sistema de tracking funcionando!');
    } else {
        console.log('‚ö†Ô∏è ATEN√á√ÉO: Verificar configura√ß√µes no painel admin');
    }
});

// Exportar fun√ß√µes para uso manual
window.testTracking = {
    runIntegrationTest,
    testMetaPixel,
    testGoogleTagManager,
    testReactIntegration
};