<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Testador de API Hotmart</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 600px;
            margin: 40px auto;
            padding: 20px;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        input, select {
            width: 100%;
            padding: 10px;
            margin: 8px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            cursor: pointer;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            font-weight: bold;
        }
        .primary-button {
            background-color: #3b82f6;
            color: white;
            width: 100%;
        }
        .primary-button:hover {
            background-color: #2563eb;
        }
        .secondary-button {
            background-color: #e5e7eb;
            color: #374151;
        }
        .secondary-button:hover {
            background-color: #d1d5db;
        }
        .green-button {
            background-color: #10b981;
            color: white;
        }
        .green-button:hover {
            background-color: #059669;
        }
        .test-button {
            background-color: #1e40af;
            color: white;
            padding: 12px 20px;
            width: 100%;
        }
        .test-button:hover {
            background-color: #1e3a8a;
        }
        .success-box {
            background-color: #d1fae5;
            border-left: 4px solid #10b981;
            padding: 15px;
            color: #065f46;
            margin: 15px 0;
        }
        .error-box {
            background-color: #fee2e2;
            border-left: 4px solid #ef4444;
            padding: 15px;
            color: #b91c1c;
            margin: 15px 0;
        }
        .result-json {
            background-color: #f3f4f6;
            padding: 15px;
            border-radius: 4px;
            overflow: auto;
            font-family: monospace;
            font-size: 14px;
            max-height: 200px;
        }
        .environment-selector {
            display: flex;
            background-color: #f3f4f6;
            border-radius: 8px;
            overflow: hidden;
            margin-bottom: 20px;
        }
        .environment-option {
            flex: 1;
            text-align: center;
            padding: 15px;
            cursor: pointer;
        }
        .environment-option.selected {
            background-color: #fff;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        .fade-in {
            animation: fadeIn 0.5s;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        .info-icon {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background-color: #e5e7eb;
            color: #6b7280;
            font-size: 14px;
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 style="text-align: center; font-size: 24px; font-weight: bold; margin-bottom: 20px;">
            Testador de API Hotmart
        </h1>
        <p style="text-align: center; color: #6b7280; margin-bottom: 20px;">
            Preencha as credenciais da API Hotmart para verificar se elas estão funcionando corretamente.
        </p>
        
        <div class="environment-selector">
            <div id="sandbox-env" class="environment-option selected">
                Ambiente Sandbox
            </div>
            <div id="prod-env" class="environment-option">
                Ambiente de Produção
            </div>
        </div>
        
        <div>
            <label>Client ID <span id="env-label">(Sandbox)</span></label>
            <input type="text" id="client-id" placeholder="Digite seu Client ID">
        </div>
        
        <div style="margin-top: 15px;">
            <label>Client Secret <span id="env-label-secret">(Sandbox)</span></label>
            <input type="password" id="client-secret" placeholder="Digite seu Client Secret">
        </div>
        
        <div id="error-container" class="error-box" style="display: none; margin-top: 20px;">
            <div style="display: flex; align-items: center; margin-bottom: 10px;">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 10px;">
                    <circle cx="12" cy="12" r="10"></circle>
                    <line x1="12" y1="8" x2="12" y2="12"></line>
                    <line x1="12" y1="16" x2="12.01" y2="16"></line>
                </svg>
                <strong>Erro nas credenciais</strong>
            </div>
            <p id="error-message">Erro ao testar credenciais</p>
            <div id="error-details" class="result-json" style="margin-top: 10px; display: none;">
                <pre id="error-details-content"></pre>
            </div>
        </div>
        
        <div id="result-container" class="success-box fade-in" style="display: none; margin-top: 20px;">
            <div style="display: flex; align-items: center; margin-bottom: 10px;">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 10px;">
                    <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                    <polyline points="22 4 12 14.01 9 11.01"></polyline>
                </svg>
                <strong>Credenciais válidas!</strong>
            </div>
            <p>Você recebeu um token de acesso válido.</p>
            
            <div class="result-json" style="margin-top: 15px;">
                <pre id="result-json"></pre>
            </div>
        </div>
        
        <div style="display: flex; align-items: center; margin-top: 20px; margin-bottom: 10px;">
            <div class="info-icon">i</div>
            <span style="font-size: 14px; color: #6b7280;">
                As credenciais serão usadas apenas para teste, não serão armazenadas
            </span>
        </div>
        
        <button id="test-button" class="test-button">
            Testar Credenciais
        </button>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Elementos do DOM
            const sandboxEnv = document.getElementById('sandbox-env');
            const prodEnv = document.getElementById('prod-env');
            const envLabel = document.getElementById('env-label');
            const envLabelSecret = document.getElementById('env-label-secret');
            const clientIdInput = document.getElementById('client-id');
            const clientSecretInput = document.getElementById('client-secret');
            const testButton = document.getElementById('test-button');
            const resultContainer = document.getElementById('result-container');
            const resultJsonPre = document.getElementById('result-json');
            const errorContainer = document.getElementById('error-container');
            const errorMessage = document.getElementById('error-message');
            const errorDetails = document.getElementById('error-details');
            const errorDetailsContent = document.getElementById('error-details-content');

            // Estado
            let isLoading = false;
            let selectedEnv = 'sandbox';

            // Eventos
            sandboxEnv.addEventListener('click', () => selectEnvironment('sandbox'));
            prodEnv.addEventListener('click', () => selectEnvironment('prod'));
            testButton.addEventListener('click', testCredentials);

            // Funções
            function selectEnvironment(env) {
                selectedEnv = env;
                
                if (env === 'sandbox') {
                    sandboxEnv.classList.add('selected');
                    prodEnv.classList.remove('selected');
                    envLabel.textContent = '(Sandbox)';
                    envLabelSecret.textContent = '(Sandbox)';
                } else {
                    prodEnv.classList.add('selected');
                    sandboxEnv.classList.remove('selected');
                    envLabel.textContent = '(Produção)';
                    envLabelSecret.textContent = '(Produção)';
                }
                
                hideResult();
                hideError();
            }

            async function testCredentials() {
                const clientId = clientIdInput.value.trim();
                const clientSecret = clientSecretInput.value.trim();

                if (!clientId || !clientSecret) {
                    showError('Por favor, preencha o Client ID e o Client Secret');
                    return;
                }

                setLoading(true);
                hideError();
                hideResult();

                try {
                    // Chamando nosso backend que lida com a API da Hotmart
                    const response = await fetch('/test-api', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            clientId,
                            clientSecret,
                            environment: selectedEnv
                        })
                    });

                    const data = await response.json();
                    
                    if (response.ok) {
                        showResult(data);
                    } else {
                        showError(data.message || 'Erro ao testar as credenciais');
                        if (data.details) {
                            showErrorDetails(data.details);
                        }
                    }
                } catch (err) {
                    showError('Erro ao conectar com o servidor: ' + err.message);
                } finally {
                    setLoading(false);
                }
            }

            // Funções auxiliares
            function showError(message) {
                errorContainer.style.display = 'block';
                errorMessage.textContent = message;
            }

            function showErrorDetails(details) {
                errorDetails.style.display = 'block';
                errorDetailsContent.textContent = JSON.stringify(details, null, 2);
            }

            function hideError() {
                errorContainer.style.display = 'none';
                errorDetails.style.display = 'none';
            }

            function hideResult() {
                resultContainer.style.display = 'none';
            }

            function setLoading(loading) {
                isLoading = loading;
                testButton.disabled = loading;
                testButton.textContent = loading ? 'Testando...' : 'Testar Credenciais';
            }

            function showResult(result) {
                resultContainer.style.display = 'block';
                resultJsonPre.textContent = JSON.stringify(result, null, 2);
            }
        });
    </script>
</body>
</html>