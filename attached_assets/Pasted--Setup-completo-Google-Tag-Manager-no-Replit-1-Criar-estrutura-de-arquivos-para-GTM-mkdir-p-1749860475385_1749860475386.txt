# Setup completo Google Tag Manager no Replit

# 1. Criar estrutura de arquivos para GTM
mkdir -p public/js/gtm
mkdir -p public/css

# 2. Criar arquivo de configuração do GTM
cat > public/js/gtm/gtm-config.js << 'EOF'
// Configuração do Google Tag Manager
(function() {
    // ID do Container GTM - Substitua pelo seu ID real
    const GTM_ID = 'GTM-P52CSHQB';
    
    if (!GTM_ID) {
        console.error('GTM Container ID não configurado');
        return;
    }

    // Função para carregar GTM
    function loadGTM() {
        // GTM Script no head
        (function(w,d,s,l,i){
            w[l]=w[l]||[];
            w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});
            var f=d.getElementsByTagName(s)[0],
            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';
            j.async=true;j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;
            f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer',GTM_ID);

        // GTM noscript fallback
        const noscript = document.createElement('noscript');
        const iframe = document.createElement('iframe');
        iframe.src = `https://www.googletagmanager.com/ns.html?id=${GTM_ID}`;
        iframe.height = '0';
        iframe.width = '0';
        iframe.style.display = 'none';
        iframe.style.visibility = 'hidden';
        noscript.appendChild(iframe);
        document.body.insertBefore(noscript, document.body.firstChild);

        console.log('✅ Google Tag Manager carregado:', GTM_ID);
    }

    // Inicializar dataLayer se não existir
    window.dataLayer = window.dataLayer || [];

    // Função helper para GTM
    function gtag() {
        dataLayer.push(arguments);
    }
    window.gtag = gtag;

    // Configuração inicial
    gtag('js', new Date());
    gtag('config', GTM_ID);

    // Carregar GTM
    loadGTM();

    // Funções de rastreamento personalizadas
    window.GTMTracker = {
        // Rastrear eventos de formulário
        trackFormSubmit: function(formData) {
            dataLayer.push({
                'event': 'form_submit',
                'form_name': formData.formName || 'contact_form',
                'form_type': formData.type || 'lead',
                'user_email': formData.email,
                'user_name': formData.name,
                'lead_value': formData.value || 0,
                'timestamp': new Date().toISOString()
            });
            console.log('GTM: Form submit tracked', formData);
        },

        // Rastrear cliques em botões
        trackButtonClick: function(buttonData) {
            dataLayer.push({
                'event': 'button_click',
                'button_name': buttonData.name,
                'button_type': buttonData.type || 'action',
                'page_section': buttonData.section || 'main',
                'timestamp': new Date().toISOString()
            });
            console.log('GTM: Button click tracked', buttonData);
        },

        // Rastrear visualizações de página
        trackPageView: function(pageData) {
            dataLayer.push({
                'event': 'page_view',
                'page_title': pageData.title || document.title,
                'page_url': pageData.url || window.location.href,
                'page_category': pageData.category || 'general',
                'user_type': pageData.userType || 'anonymous',
                'timestamp': new Date().toISOString()
            });
            console.log('GTM: Page view tracked', pageData);
        },

        // Rastrear conversões
        trackConversion: function(conversionData) {
            dataLayer.push({
                'event': 'conversion',
                'conversion_type': conversionData.type,
                'conversion_value': conversionData.value || 0,
                'conversion_currency': conversionData.currency || 'BRL',
                'transaction_id': conversionData.transactionId || 'TXN_' + Date.now(),
                'timestamp': new Date().toISOString()
            });
            console.log('GTM: Conversion tracked', conversionData);
        },

        // Rastrear eventos customizados
        trackCustomEvent: function(eventName, eventData) {
            dataLayer.push({
                'event': eventName,
                ...eventData,
                'timestamp': new Date().toISOString()
            });
            console.log('GTM: Custom event tracked', eventName, eventData);
        },

        // Rastrear erro/exceção
        trackException: function(errorData) {
            dataLayer.push({
                'event': 'exception',
                'error_message': errorData.message,
                'error_type': errorData.type || 'javascript',
                'error_fatal': errorData.fatal || false,
                'page_url': window.location.href,
                'timestamp': new Date().toISOString()
            });
            console.log('GTM: Exception tracked', errorData);
        },

        // Definir dados do usuário
        setUserData: function(userData) {
            dataLayer.push({
                'event': 'user_data_set',
                'user_id': userData.id,
                'user_type': userData.type || 'registered',
                'user_plan': userData.plan || 'free',
                'user_signup_date': userData.signupDate,
                'timestamp': new Date().toISOString()
            });
            console.log('GTM: User data set', userData);
        },

        // Debugar dataLayer
        debugDataLayer: function() {
            console.log('📊 GTM DataLayer:', window.dataLayer);
            return window.dataLayer;
        }
    };

    // Auto-track page view quando carrega
    document.addEventListener('DOMContentLoaded', function() {
        window.GTMTracker.trackPageView({
            title: document.title,
            category: 'main'
        });
    });

    // Auto-track erros JavaScript
    window.addEventListener('error', function(e) {
        window.GTMTracker.trackException({
            message: e.message,
            type: 'javascript_error',
            fatal: false
        });
    });

    console.log('🏷️ Google Tag Manager configurado com sucesso!');
})();
EOF

# 3. Criar página de teste para GTM
cat > public/gtm-test.html << 'EOF'
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Teste Google Tag Manager - Replit</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
            background: #f8fafc;
            color: #334155;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        h1, h2 {
            color: #1e293b;
            margin-bottom: 15px;
        }
        .status-card {
            background: #e0f7fa;
            border: 1px solid #4dd0e1;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 25px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #374151;
        }
        input, textarea, select {
            width: 100%;
            padding: 12px;
            border: 2px solid #e5e7eb;
            border-radius: 6px;
            font-size: 16px;
            transition: border-color 0.2s;
        }
        input:focus, textarea:focus, select:focus {
            outline: none;
            border-color: #3b82f6;
        }
        .btn {
            background: #3b82f6;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 16px;
            margin: 10px 5px;
            transition: all 0.2s;
        }
        .btn:hover {
            background: #2563eb;
            transform: translateY(-1px);
        }
        .btn-secondary {
            background: #6b7280;
        }
        .btn-secondary:hover {
            background: #4b5563;
        }
        .btn-success {
            background: #10b981;
        }
        .btn-success:hover {
            background: #059669;
        }
        .btn-warning {
            background: #f59e0b;
        }
        .btn-warning:hover {
            background: #d97706;
        }
        .test-section {
            background: #f8fafc;
            padding: 20px;
            border-radius: 8px;
            margin: 20px 0;
        }
        .debug-console {
            background: #1f2937;
            color: #d1d5db;
            padding: 20px;
            border-radius: 8px;
            font-family: 'Monaco', 'Menlo', monospace;
            font-size: 14px;
            max-height: 300px;
            overflow-y: auto;
            margin-top: 20px;
        }
        .event-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin: 20px 0;
        }
        .success-message {
            background: #d1fae5;
            color: #065f46;
            padding: 15px;
            border-radius: 6px;
            margin: 15px 0;
            display: none;
        }
        .gtm-id {
            background: #1f2937;
            color: #fbbf24;
            padding: 8px 12px;
            border-radius: 4px;
            font-family: monospace;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>🏷️ Google Tag Manager - Teste de Integração</h1>
        
        <div class="status-card">
            <h3>Status da Configuração GTM</h3>
            <p><strong>Container ID:</strong> <span class="gtm-id" id="gtm-container-id">Carregando...</span></p>
            <p id="gtm-status">🔄 Verificando configuração...</p>
        </div>

        <!-- Formulário de Teste -->
        <div class="container">
            <h2>📝 Formulário de Contato (Teste de Lead)</h2>
            <form id="leadForm">
                <div class="form-group">
                    <label for="name">Nome Completo:</label>
                    <input type="text" id="name" name="name" required placeholder="Seu nome">
                </div>
                
                <div class="form-group">
                    <label for="email">Email:</label>
                    <input type="email" id="email" name="email" required placeholder="seu@email.com">
                </div>
                
                <div class="form-group">
                    <label for="phone">Telefone:</label>
                    <input type="tel" id="phone" name="phone" placeholder="(11) 99999-9999">
                </div>
                
                <div class="form-group">
                    <label for="company">Empresa:</label>
                    <input type="text" id="company" name="company" placeholder="Nome da empresa">
                </div>
                
                <div class="form-group">
                    <label for="interest">Área de Interesse:</label>
                    <select id="interest" name="interest">
                        <option value="produto">Produto</option>
                        <option value="servico">Serviço</option>
                        <option value="consultoria">Consultoria</option>
                        <option value="suporte">Suporte</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="budget">Orçamento Estimado:</label>
                    <select id="budget" name="budget">
                        <option value="500">Até R$ 500</option>
                        <option value="1000">R$ 500 - R$ 1.000</option>
                        <option value="5000">R$ 1.000 - R$ 5.000</option>
                        <option value="10000">Acima de R$ 5.000</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="message">Mensagem:</label>
                    <textarea id="message" name="message" rows="4" placeholder="Descreva seu projeto ou necessidade"></textarea>
                </div>
                
                <button type="submit" class="btn">🚀 Enviar Formulário</button>
            </form>
            
            <div class="success-message" id="form-success">
                ✅ Formulário enviado com sucesso! Evento GTM disparado.
            </div>
        </div>

        <!-- Testes de Eventos -->
        <div class="container">
            <h2>🧪 Testes de Eventos GTM</h2>
            
            <div class="test-section">
                <h3>Eventos de Interação</h3>
                <div class="event-grid">
                    <button class="btn btn-secondary" onclick="testButtonClick()">📱 Teste Click</button>
                    <button class="btn btn-success" onclick="testConversion()">💰 Teste Conversão</button>
                    <button class="btn btn-warning" onclick="testCustomEvent()">⚡ Evento Custom</button>
                    <button class="btn" onclick="testPageView()">👁️ Page View</button>
                </div>
            </div>

            <div class="test-section">
                <h3>Dados do Usuário</h3>
                <div class="event-grid">
                    <button class="btn" onclick="setUserData('free')">👤 Usuário Free</button>
                    <button class="btn btn-success" onclick="setUserData('premium')">💎 Usuário Premium</button>
                    <button class="btn btn-warning" onclick="testException()">⚠️ Teste Erro</button>
                    <button class="btn btn-secondary" onclick="debugDataLayer()">🔍 Debug GTM</button>
                </div>
            </div>
        </div>

        <!-- Simulação de E-commerce -->
        <div class="container">
            <h2>🛒 Simulação E-commerce</h2>
            <div class="event-grid">
                <button class="btn" onclick="trackPurchase()">💳 Compra</button>
                <button class="btn btn-secondary" onclick="trackAddToCart()">🛍️ Add to Cart</button>
                <button class="btn btn-warning" onclick="trackViewItem()">👁️ View Item</button>
                <button class="btn btn-success" onclick="trackBeginCheckout()">🏁 Begin Checkout</button>
            </div>
        </div>

        <!-- Console de Debug -->
        <div class="container">
            <h2>📊 Console de Debug GTM</h2>
            <p>Acompanhe os eventos sendo enviados para o dataLayer:</p>
            <div class="debug-console" id="debug-console">
                [Aguardando eventos...]
            </div>
            <button class="btn btn-secondary" onclick="clearDebugConsole()">🧹 Limpar Console</button>
        </div>
    </div>

    <!-- GTM Configuration -->
    <script src="/js/gtm/gtm-config.js"></script>
    
    <script>
        // Verificar status do GTM
        setTimeout(() => {
            const statusElement = document.getElementById('gtm-status');
            const containerElement = document.getElementById('gtm-container-id');
            
            if (typeof dataLayer !== 'undefined' && window.GTMTracker) {
                statusElement.innerHTML = '✅ GTM carregado e funcionando corretamente';
                statusElement.style.color = '#065f46';
                containerElement.textContent = 'GTM-P52CSHQB';
            } else {
                statusElement.innerHTML = '❌ Erro: GTM não carregou corretamente';
                statusElement.style.color = '#dc2626';
                containerElement.textContent = 'Erro na configuração';
            }
        }, 2000);

        // Debug console
        function addToDebugConsole(message, data = null) {
            const debugConsole = document.getElementById('debug-console');
            const timestamp = new Date().toLocaleTimeString();
            const dataStr = data ? ' | Data: ' + JSON.stringify(data, null, 2) : '';
            debugConsole.innerHTML += `<div>[${timestamp}] ${message}${dataStr}</div>`;
            debugConsole.scrollTop = debugConsole.scrollHeight;
        }

        function clearDebugConsole() {
            document.getElementById('debug-console').innerHTML = '[Console limpo]';
        }

        // Formulário de contato
        document.getElementById('leadForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = {
                formName: 'lead_form',
                type: 'contact',
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                phone: document.getElementById('phone').value,
                company: document.getElementById('company').value,
                interest: document.getElementById('interest').value,
                budget: parseInt(document.getElementById('budget').value),
                message: document.getElementById('message').value,
                value: parseInt(document.getElementById('budget').value)
            };

            // Enviar para GTM
            if (window.GTMTracker) {
                window.GTMTracker.trackFormSubmit(formData);
                addToDebugConsole('📝 Form Submit Event', formData);
            }

            // Mostrar sucesso
            document.getElementById('form-success').style.display = 'block';
            this.reset();
            
            setTimeout(() => {
                document.getElementById('form-success').style.display = 'none';
            }, 5000);
        });

        // Funções de teste
        function testButtonClick() {
            if (window.GTMTracker) {
                const buttonData = {
                    name: 'test_button',
                    type: 'test',
                    section: 'testing_area'
                };
                window.GTMTracker.trackButtonClick(buttonData);
                addToDebugConsole('🖱️ Button Click Event', buttonData);
            }
        }

        function testConversion() {
            if (window.GTMTracker) {
                const conversionData = {
                    type: 'signup',
                    value: 97,
                    currency: 'BRL',
                    transactionId: 'TEST_' + Date.now()
                };
                window.GTMTracker.trackConversion(conversionData);
                addToDebugConsole('💰 Conversion Event', conversionData);
            }
        }

        function testCustomEvent() {
            if (window.GTMTracker) {
                const eventData = {
                    custom_parameter: 'test_value',
                    event_category: 'testing',
                    event_label: 'manual_test'
                };
                window.GTMTracker.trackCustomEvent('custom_test_event', eventData);
                addToDebugConsole('⚡ Custom Event', eventData);
            }
        }

        function testPageView() {
            if (window.GTMTracker) {
                const pageData = {
                    title: 'Test Page View',
                    category: 'testing',
                    userType: 'tester'
                };
                window.GTMTracker.trackPageView(pageData);
                addToDebugConsole('👁️ Page View Event', pageData);
            }
        }

        function setUserData(plan) {
            if (window.GTMTracker) {
                const userData = {
                    id: 'user_' + Date.now(),
                    type: 'registered',
                    plan: plan,
                    signupDate: new Date().toISOString()
                };
                window.GTMTracker.setUserData(userData);
                addToDebugConsole('👤 User Data Set', userData);
            }
        }

        function testException() {
            if (window.GTMTracker) {
                const errorData = {
                    message: 'Test error for GTM tracking',
                    type: 'manual_test',
                    fatal: false
                };
                window.GTMTracker.trackException(errorData);
                addToDebugConsole('⚠️ Exception Event', errorData);
            }
        }

        function debugDataLayer() {
            if (window.GTMTracker) {
                const dataLayer = window.GTMTracker.debugDataLayer();
                addToDebugConsole('🔍 DataLayer Debug', dataLayer);
            }
        }

        // E-commerce events
        function trackPurchase() {
            if (window.GTMTracker) {
                const purchaseData = {
                    event_name: 'purchase',
                    transaction_id: 'T' + Date.now(),
                    value: 297,
                    currency: 'BRL',
                    items: [
                        {
                            item_id: 'PROD001',
                            item_name: 'Produto Premium',
                            category: 'subscription',
                            quantity: 1,
                            price: 297
                        }
                    ]
                };
                window.GTMTracker.trackCustomEvent('purchase', purchaseData);
                addToDebugConsole('💳 Purchase Event', purchaseData);
            }
        }

        function trackAddToCart() {
            if (window.GTMTracker) {
                const cartData = {
                    event_name: 'add_to_cart',
                    currency: 'BRL',
                    value: 97,
                    items: [
                        {
                            item_id: 'PROD002',
                            item_name: 'Plano Básico',
                            category: 'subscription',
                            quantity: 1,
                            price: 97
                        }
                    ]
                };
                window.GTMTracker.trackCustomEvent('add_to_cart', cartData);
                addToDebugConsole('🛍️ Add to Cart Event', cartData);
            }
        }

        function trackViewItem() {
            if (window.GTMTracker) {
                const viewData = {
                    event_name: 'view_item',
                    currency: 'BRL',
                    value: 197,
                    items: [
                        {
                            item_id: 'PROD003',
                            item_name: 'Plano Profissional',
                            category: 'subscription',
                            price: 197
                        }
                    ]
                };
                window.GTMTracker.trackCustomEvent('view_item', viewData);
                addToDebugConsole('👁️ View Item Event', viewData);
            }
        }

        function trackBeginCheckout() {
            if (window.GTMTracker) {
                const checkoutData = {
                    event_name: 'begin_checkout',
                    currency: 'BRL',
                    value: 397,
                    items: [
                        {
                            item_id: 'PROD004',
                            item_name: 'Plano Enterprise',
                            category: 'subscription',
                            quantity: 1,
                            price: 397
                        }
                    ]
                };
                window.GTMTracker.trackCustomEvent('begin_checkout', checkoutData);
                addToDebugConsole('🏁 Begin Checkout Event', checkoutData);
            }
        }
    </script>
</body>
</html>
EOF

# 4. Atualizar servidor para incluir GTM
cat >> server.js << 'EOF'

// Rota para teste do GTM
app.get('/gtm-test', (req, res) => {
    res.sendFile(path.join(__dirname, 'public/gtm-test.html'));
});

// API para receber eventos GTM (opcional - para debug)
app.post('/api/gtm/event', (req, res) => {
    console.log('📊 GTM Event recebido:', req.body);
    res.json({ success: true, message: 'Evento GTM processado' });
});
EOF

# 5. Criar integração GTM + Meta Pixel
cat > public/js/unified-tracking.js << 'EOF'
// Configuração unificada: GTM + Meta Pixel
(function() {
    const TRACKING_CONFIG = {
        gtm: {
            id: 'GTM-P52CSHQB',
            enabled: true
        },
        metaPixel: {
            id: '123123145',
            enabled: true
        }
    };

    // Função unificada para rastrear eventos
    window.UnifiedTracker = {
        // Rastrear formulário em ambas as plataformas
        trackFormSubmit: function(formData) {
            // GTM
            if (TRACKING_CONFIG.gtm.enabled && window.GTMTracker) {
                window.GTMTracker.trackFormSubmit(formData);
            }
            
            // Meta Pixel
            if (TRACKING_CONFIG.metaPixel.enabled && window.trackFormSubmit) {
                window.trackFormSubmit(formData);
            }
            
            console.log('🎯 Unified tracking: Form submit', formData);
        },

        // Rastrear conversões
        trackConversion: function(conversionData) {
            // GTM
            if (TRACKING_CONFIG.gtm.enabled && window.GTMTracker) {
                window.GTMTracker.trackConversion(conversionData);
            }
            
            // Meta Pixel
            if (TRACKING_CONFIG.metaPixel.enabled && typeof fbq !== 'undefined') {
                fbq('track', 'Purchase', {
                    value: conversionData.value,
                    currency: conversionData.currency || 'BRL'
                });
            }
            
            console.log('🎯 Unified tracking: Conversion', conversionData);
        },

        // Rastrear page views
        trackPageView: function(pageData) {
            // GTM
            if (TRACKING_CONFIG.gtm.enabled && window.GTMTracker) {
                window.GTMTracker.trackPageView(pageData);
            }
            
            // Meta Pixel
            if (TRACKING_CONFIG.metaPixel.enabled && typeof fbq !== 'undefined') {
                fbq('track', 'PageView');
            }
            
            console.log('🎯 Unified tracking: Page view', pageData);
        },

        // Verificar status das integrações
        getStatus: function() {
            return {
                gtm: {
                    loaded: typeof dataLayer !== 'undefined',
                    configured: TRACKING_CONFIG.gtm.enabled
                },
                metaPixel: {
                    loaded: typeof fbq !== 'undefined',
                    configured: TRACKING_CONFIG.metaPixel.enabled
                }
            };
        }
    };

    console.log('🎯 Unified Tracker inicializado');
})();
EOF

# 6. Criar página de exemplo com ambas as integrações
cat > public/complete-tracking.html << 'EOF'
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tracking Completo - GTM + Meta Pixel</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background: #f5f7fa;
        }
        .integration-status {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 30px;
        }
        .status-card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            border-left: 4px solid #3b82f6;
        }
        .status-card.meta { border-left-color: #1877f2; }
        .status-card.gtm { border-left-color: #f4b400; }
        .btn {
            background: #3b82f6;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin: 5px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input, select {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <h1>🎯 Tracking Completo - GTM + Meta Pixel</h1>
    
    <div class="integration-status">
        <div class="status-card gtm">
            <h3>🏷️ Google Tag Manager</h3>
            <p id="gtm-status">Carregando...</p>
        </div>
        <div class="status-card meta">
            <h3>📊 Meta Pixel</h3>
            <p id="meta-status">Carregando...</p>
        </div