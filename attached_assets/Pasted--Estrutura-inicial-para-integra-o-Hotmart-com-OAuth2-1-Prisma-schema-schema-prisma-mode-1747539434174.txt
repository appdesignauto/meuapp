// Estrutura inicial para integração Hotmart com OAuth2

// 1. Prisma schema (schema.prisma)
model HotmartOAuth {
  id           String   @id @default(uuid())
  accessToken  String
  refreshToken String
  expiresAt    DateTime
  createdAt    DateTime @default(now())
}

// 2. .env
HOTMART_CLIENT_ID=SEU_CLIENT_ID
HOTMART_CLIENT_SECRET=SEU_CLIENT_SECRET
HOTMART_REDIRECT_URI=https://designauto.com.br/integracoes/hotmart/callback
HOTMART_API_BASE=https://api.hotmart.com

// 3. server/routes/hotmart-auth.ts
import express from 'express';
import axios from 'axios';
import { prisma } from '../lib/prisma';

const router = express.Router();

router.get('/integracoes/hotmart/connect', (req, res) => {
  const url = `https://api.hotmart.com/oauth/authorize?client_id=${process.env.HOTMART_CLIENT_ID}&redirect_uri=${encodeURIComponent(process.env.HOTMART_REDIRECT_URI)}&response_type=code&scope=read`; // pode personalizar
  res.redirect(url);
});

router.get('/integracoes/hotmart/callback', async (req, res) => {
  const { code } = req.query;
  try {
    const response = await axios.post('https://api.hotmart.com/oauth/token', null, {
      params: {
        client_id: process.env.HOTMART_CLIENT_ID,
        client_secret: process.env.HOTMART_CLIENT_SECRET,
        code,
        grant_type: 'authorization_code',
        redirect_uri: process.env.HOTMART_REDIRECT_URI
      }
    });

    const { access_token, refresh_token, expires_in } = response.data;
    const expiresAt = new Date(Date.now() + expires_in * 1000);

    await prisma.hotmartOAuth.create({
      data: {
        accessToken: access_token,
        refreshToken: refresh_token,
        expiresAt
      }
    });

    res.send('Autorizado com sucesso!');
  } catch (err) {
    console.error('Erro ao autorizar com Hotmart:', err);
    res.status(500).send('Erro na autenticação');
  }
});

export default router;

// 4. server/index.ts ou app principal
import hotmartAuthRoutes from './routes/hotmart-auth';
app.use(hotmartAuthRoutes);
